import groovy.json.JsonSlurper
import groovy.json.JsonBuilder
String jsonString = '''{"menu": {
"id": "file",
"tools": {
"actions": [
{"id": "new", "title": "NewFile"},
{"id": "open", "title": "OpenFile"},
{"id": "close", "title": "CloseFile"}
],
"errors": []
}}}'''
JsonSlurper slurper = new JsonSlurper()
def parsedJson = slurper.parseText(jsonString)
def file_extenstion = ".yaml"
parsedJson.each { key, value ->

 for (action in value.tools.actions){
   def file_name = "$action.title$file_extenstion"
   println " filename is : $file_name"
   def file = new File('/opt/iaac/workspace/morph_scripts/new_scripts/'+file_name)
       file.write(new JsonBuilder(action).toPrettyString())
 }

 //println " filename is : $value.title$file_extenstion "
}

// parsedJson.menu.tools.each { key, value ->
//     println "$value.title"
   
// }

{"task":{"id":296,"accountId":1,"name":"apijenkinstest","code":"powershell","taskType":{"id":1,"code":"script","name":"Shell Script"},"taskOptions":{"localScriptGitId":null,"username":null,"password":null,"localScriptGitRef":null,"port":null,"host":null,"sshKey":null,"script":null},"file":{"id":17,"sourceType":"local","contentRef":null,"contentPath":null,"repository":null,"content":null},"resultType":null,"executeTarget":"resource","retryable":false,"retryCount":5,"retryDelaySeconds":10,"allowCustomConfig":false,"dateCreated":"2020-05-21T16:27:49+0000","lastUpdated":"2020-06-15T21:46:49+0000"}}



JsonSlurper slurper = new JsonSlurper()
def parsedJson = slurper.parseText(taskString)
def file_extenstion = ".yaml"
parsedJson.each { key, value ->
 println "task name is $value.name"
 def file_name = "$value.name$file_extenstion"
 def file = new File(file_name)
 file.write(new JsonBuilder(value).toPrettyString())
}
